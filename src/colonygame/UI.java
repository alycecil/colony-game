/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package colonygame;

import colonygame.resources.Sprite;
import java.awt.Graphics;

/**
 *
 * @author TOM
 */
public class UI extends javax.swing.JFrame {

    int x, y, z;
    public static int RENDER_WIDTH = 4;
    public static int RENDER_HEIGHT = 7;
    
    public static int MARGIN_X = 40;
    public static int MARGIN_Y = 40;

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        x = y = z = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpCanvas = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(620, 480));
        setPreferredSize(new java.awt.Dimension(620, 480));

        jpCanvas.setBackground(new java.awt.Color(0, 0, 0));
        jpCanvas.setForeground(new java.awt.Color(255, 255, 255));
        jpCanvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpCanvasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpCanvasLayout = new javax.swing.GroupLayout(jpCanvas);
        jpCanvas.setLayout(jpCanvasLayout);
        jpCanvasLayout.setHorizontalGroup(
            jpCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 447, Short.MAX_VALUE)
        );
        jpCanvasLayout.setVerticalGroup(
            jpCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 429, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jpCanvasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpCanvasMouseClicked
        
        renderFrame();
    }//GEN-LAST:event_jpCanvasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new UI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jpCanvas;
    // End of variables declaration//GEN-END:variables

    void prep() {
    }

    /**
     * get the current map cell and render it to the appropriate frame
     */
    void renderFrame() {

        //Sprite
        Sprite tile = Main.game.getMap().getWorld().getTile();
        
        //calc size to pull
        RENDER_WIDTH=(jpCanvas.getBounds().width-2*MARGIN_X)/tile.getCellWidth();
        RENDER_HEIGHT=(jpCanvas.getBounds().height-2*MARGIN_Y)/tile.getCellHeight();
        
        //get map subset to render
        char[][] mapBlock = Main.game.getMap().getBlock(x, y, z,
                RENDER_WIDTH, RENDER_HEIGHT);

        


        Graphics g = jpCanvas.getGraphics();

        // _ _ _ _ _
        //  _ _ _ _ _ 
        // _ _ _ _ _
        //  _ _ _ _ _ 
        // _ _ _ _ _
        for (int i = 0; i < RENDER_WIDTH; i++) {
            for (int j = 0; j < RENDER_HEIGHT; j++) {
                
                g.drawImage(tile.getCell(mapBlock[i][j]),
                        MARGIN_X+i*tile.getCellWidth()+(tile.getCellWidth()/2)*(j%2),
                        MARGIN_Y+j*tile.getCellHeight()/2, null);
            }
        }

        

    }

    void error(InterruptedException e) {
    }
}
